#!/usr/bin/env python3
"""
Scout: Research the financial markets.
"""

import typer
import logging
from rich import print as rprint
from src.utils.references import __Application__, __version__, IB_API_LOGGER_NAME
from src.utils.command.command_utils import (
    init_logging,
    version_callback,
    set_error_and_exit,
)
from src.cli import cli_app

logger = logging.getLogger(IB_API_LOGGER_NAME)


@cli_app.callback(invoke_without_command=True)
def main(
    ctx: typer.Context,
    version: bool = typer.Option(
        None,
        "--version",
        callback=version_callback,
        is_eager=True,
        help="Show software version",
    ),
):
    """
    Prints application information and exits if no subcommand is provided.
    """
    message = f"""
    [bold]------------------------------------------------------------------------------------------------[/bold]
    [bold blue]{__Application__.replace("_", " ").upper()} {__version__} [/bold blue]
    [bold yellow]Research financial markets [/bold yellow]
    [bold]------------------------------------------------------------------------------------------------[/bold]

    [green]
    Interact with your brokerage account to access real-time and historical market data, analyze trends, and
    manage your positions.

    For more detailed guidance on a command, you can type 'scout COMMAND --help'. For example, 'scout analyze --help'
    will display detailed information about the analyze command.
    """
    if ctx.invoked_subcommand is None:
        rprint(message)
        raise typer.Exit()


if __name__ == "__main__":
    try:
        app_log = init_logging(logging.DEBUG)
        app_log.log_application_start()
        cli_app()
    except Exception as e:
        logger.error("An error occurred: %s", e)
        set_error_and_exit(e)
    finally:
        app_log.log_application_finish()
